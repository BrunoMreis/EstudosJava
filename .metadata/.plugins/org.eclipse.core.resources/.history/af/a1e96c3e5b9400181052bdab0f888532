package br.com.alura.alurator;

import java.lang.reflect.InvocationTargetException;

import br.com.alura.alurator.protocolo.Request;

public class Alurator {

	private String pacoteBase;

	public Alurator(String pacoteBase) {
		this.pacoteBase = pacoteBase;
	}

	public Object executa(String url) {
		// TODO - processa a requisicao executando o metodo
		// da classe em questao

		// Produto lista

		// produto -> roduto

		Request request = new Request(url);
		

		try {
			Class<?> classeControle = Class.forName(pacoteBase + request.getNomeControle());

			Object instanciaControle = classeControle.getDeclaredConstructor().newInstance();

			System.out.println(instanciaControle);

			return null;
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | IllegalArgumentException
				 | NoSuchMethodException | SecurityException e) {
			e.printStackTrace();
			throw new RuntimeException(e);
		}catch (InvocationTargetException e) {
			e.printStackTrace();
			throw new RuntimeException("Erro no contrutor!",e.getTargetException());
		}
	}
}
